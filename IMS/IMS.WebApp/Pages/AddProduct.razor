@page "/addproduct"

@inject IAddProductUseCase AddProductUseCase
@inject NavigationManager NavigationManager

<h3>Add Product</h3>
<br />
@if (_product is not null)
{
    <EditForm Model="_product" OnInvalidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Product Name</label>
            <InputText id="name" @bind-Value="_product.ProductName" class="form-control" />
        </div>
        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="name" @bind-Value="_product.Quantity" class="form-control" />
        </div>
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="_product.Price" class="form-control" />
        </div>

        <ProductInventoriesComponent ref="ProductInventoriesComponent" />

        <br />
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}


@code {
    private Product? _product;

    private ProductInventoriesComponent ProductInventoriesComponent;

    protected override void OnInitialized()
    {
        _product = new Product();
    }

    private async Task OnValidSubmit()
    {
        if(_product is not null)
        {


            await AddProductUseCase.ExecuteAsync(_product);
            NavigationManager.NavigateTo("products");
        }
    }
}
